name: Run Tests and Snapshots

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_run:
    workflows: ["Accept Baselines Workflow"]
    types:
      - completed

jobs:
  setup-nodejs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.4'
      - run: npm install

  lint:
    needs: setup-nodejs
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run lint

  unit-tests:
    needs: setup-nodejs
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run test:unit

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.get-changes.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files via GitHub API
        id: get-changes
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const githubData = await github.paginate(
              github.rest.pulls.listFiles,
              { owner: context.repo.owner, repo: context.repo.repo, pull_number: pr.number }
            );
            const files = [...new Set(
              githubData
              .map(githubInfo => githubInfo.filename)
              .filter(filePath => filePath.includes('block'))
              .map(filePath => filePath.split('/')[2])
            )];
            return files;

  snapshots-tests:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - run: npm install

      - name: Get Branch Name
        id: extract_branch_name
        run: echo "BRANCH_NAME=${GITHUB_HEAD_REF}" >> $GITHUB_ENV

      # - name: List changed files
      #   run: |
      #     git diff --name-only \
      #       ${{ github.event.pull_request.base.sha }} \
      #       ${{ github.event.pull_request.head.sha }}

      - name: Run Snapshot Tests
        run: npm run test:snapshots
        env:
          GI_KEY: ${{ secrets.GI_KEY }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          CHANGED_FILES: ${{ needs.detect-changes.outputs.changed_files }}

      - name: Inform Developer About Snapshot Failures
        if: failure()
        run: echo "Snapshots failed. Add the 'accept-baselines' label to update the baselines or fix your code."

      - name: Set PR Ready for Merge
        if: success()
        run: echo "PR is ready for merge."
